// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tutoria.Services.ConfiguracionAcademicaAPI.Context;

#nullable disable

namespace Tutoria.Services.ConfiguracionAcademicaAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230920103622_AddConfiguracionAcademicaTables")]
    partial class AddConfiguracionAcademicaTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tutoria.Services.ConfiguracionAcademicaAPI.Models.CargaTutoria", b =>
                {
                    b.Property<int>("IdCargaTutoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCargaTutoria"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("IdSemestre")
                        .HasColumnType("int");

                    b.Property<string>("IdTutor")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdTutorado")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdCargaTutoria");

                    b.HasIndex("IdSemestre");

                    b.HasIndex("IdTutor");

                    b.HasIndex("IdTutorado");

                    b.ToTable("cargasTutoria", (string)null);
                });

            modelBuilder.Entity("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Person", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApPaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("persons", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Semestre", b =>
                {
                    b.Property<int>("IdSemestre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSemestre"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("DenominacionSemestre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSemestre");

                    b.ToTable("semestres", (string)null);
                });

            modelBuilder.Entity("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Administrador", b =>
                {
                    b.HasBaseType("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Person");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.ToTable("administradores", (string)null);
                });

            modelBuilder.Entity("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Tutor", b =>
                {
                    b.HasBaseType("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Person");

                    b.Property<string>("LugarReunion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NroCelular")
                        .HasColumnType("int");

                    b.ToTable("tutores", (string)null);
                });

            modelBuilder.Entity("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Tutorado", b =>
                {
                    b.HasBaseType("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Person");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NroCelular")
                        .HasColumnType("int");

                    b.Property<int>("NroCelularPersonaReferencia")
                        .HasColumnType("int");

                    b.Property<string>("PersonReferencia")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("tutorados", (string)null);
                });

            modelBuilder.Entity("Tutoria.Services.ConfiguracionAcademicaAPI.Models.CargaTutoria", b =>
                {
                    b.HasOne("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Semestre", "Semestre")
                        .WithMany()
                        .HasForeignKey("IdSemestre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Tutor", "Tutor")
                        .WithMany()
                        .HasForeignKey("IdTutor");

                    b.HasOne("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Tutorado", "Tutorado")
                        .WithMany()
                        .HasForeignKey("IdTutorado");

                    b.Navigation("Semestre");

                    b.Navigation("Tutor");

                    b.Navigation("Tutorado");
                });

            modelBuilder.Entity("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Administrador", b =>
                {
                    b.HasOne("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Person", null)
                        .WithOne()
                        .HasForeignKey("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Administrador", "Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Tutor", b =>
                {
                    b.HasOne("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Person", null)
                        .WithOne()
                        .HasForeignKey("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Tutor", "Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Tutorado", b =>
                {
                    b.HasOne("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Person", null)
                        .WithOne()
                        .HasForeignKey("Tutoria.Services.ConfiguracionAcademicaAPI.Models.Tutorado", "Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
